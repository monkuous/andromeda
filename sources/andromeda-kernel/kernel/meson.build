script = files('kernel.lds')[0]

kernel_elf = executable(
    'kernel.elf',
    'cpu/gdt.c',
    'cpu/idt.c',
    'cpu/idt.S',
    'drv/biosdisk.c',
    'drv/device.c',
    'drv/idle.c',
    'drv/loopback.c',
    'fs/detect.c',
    'fs/fat.c',
    'fs/iso9660.c',
    'fs/pgcache.c',
    'fs/ramfs.c',
    'fs/vfs.c',
    'init/main.c',
    'init/main.S',
    'mem/bootmem.c',
    'mem/kmalloc.c',
    'mem/memdetect.c',
    'mem/pmap.c',
    'mem/pmem.c',
    'mem/usermem.S',
    'mem/vmalloc.c',
    'mem/vmem.c',
    'mem/vmm.c',
    'proc/exec.c',
    'proc/process.c',
    'proc/sched.c',
    'proc/signal.c',
    'sys/fs.c',
    'sys/memory.c',
    'sys/misc.c',
    'sys/syscall.c',
    'sys/thread.c',
    'util/panic.c',
    'util/print.c',
    'util/string.c',
    build_by_default: false,
    c_args: [
        '-ffreestanding',
        '-fno-asynchronous-unwind-tables',
        '-fno-pie',
        '-fno-stack-protector',
        '-mgeneral-regs-only',
        '-mregparm=3',
    ],
    link_args: ['-nostdlib', '-static', '-T' + script.full_path()],
    link_depends: script,
)

custom_target(
    'kernel.sys',
    build_by_default: true,
    command: [objcopy, '@INPUT@', '@OUTPUT@', '-Obinary'],
    input: kernel_elf,
    install: true,
    install_dir: '/boot',
    install_mode: 'rw-r--r--',
    output: 'andromed.sys',
)
